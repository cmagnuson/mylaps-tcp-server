buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        // Add dependency for build script,
        // so we can access Git from our
        // build script.
        classpath 'org.ajoberstar:grgit:1.1.0'
        classpath 'com.android.tools.build:gradle:3.1.3'
    }
}

plugins {
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "findbugs"
apply plugin: "pmd"
apply plugin: 'jacoco'

ext {
    // Open the Git repository in the current directory.
    git = org.ajoberstar.grgit.Grgit.open(file('.'))

    // Get commit id of HEAD.
    revision = git.head().id
    // Alternative is using abbreviatedId of head() method.
    // revision = git.head().abbreviatedId
}

/*
 * Gets the version name from the latest Git tag
 */
def getVersionTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

group 'com.mtecresults'
version = getVersionTag()+"-${git.head().abbreviatedId}"

sourceCompatibility = 1.7

findbugs {
    ignoreFailures = true
    //toolVersion = "2.0.1"
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    toolVersion = '5.1.3'
    ruleSets = [
            'java-android',
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-j2ee',
            'java-javabeans',
            'java-junit',
            'java-logging-jakarta-commons',
            'java-logging-java',
            'java-migrating',
            'java-naming',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-sunsecure',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.jmockit:jmockit:1.39'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.apache.mina', name: 'mina-core', version: '2.0.19'

    runtime 'org.slf4j:slf4j-simple:1.7.25'
    compileOnly 'org.projectlombok:lombok:1.18.4'
}


repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}